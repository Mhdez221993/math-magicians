{"version":3,"sources":["logic/operate.js","components/Buttons.js","components/Screen.js","components/Navbar.js","components/pages/Home.js","components/pages/Quotes.js","components/Sidecalculator.js","components/Calculator.js","logic/getCurrOperation.js","logic/calculate.js","App.js","index.js"],"names":["operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","mod","Error","MapButtons","props","keys","map","key","className","onClick","cb","handleClick","type","value","Buttons","Screen","Navbar","id","path","text","link","to","activeClassName","exact","Home","Quotes","Sidecalculator","Calculator","useState","state","newState","setItem","next","total","curr","currOperation","ref","useRef","useEffect","current","filter","v","equalSing","indexOf","padStart","getCurrOperation","equalSign","event","obj","buttonName","target","match","includes","parseFloat","App","React","Component","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.4165a5a9.chunk.js","sourcesContent":["import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    return one.div(two).toString();\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import React from 'react';\n\nconst Buttons = props => {\n  const button = ['AC', '+/-', '%', 'รท', '7', '8', '9', 'x', '4', '5', '6', '-', '1', '2', '3', '+', '0', '.', '='];\n  return (\n    <div className=\"buttons\">\n      <MapButtons keys={button} cb={props} />\n    </div>\n  );\n};\n\nconst MapButtons = props => props.keys.map(key => (\n  <div key={key.toString()} className=\"button\">\n    <button onClick={props.cb.handleClick} className=\"btn\" type=\"button\" value={key}>{key}</button>\n  </div>\n));\n\nexport default Buttons;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nconst Screen = props => {\n  const { value } = props;\n\n  return (\n    <div className=\"Display\">\n      <span className=\"Screen\">{ value }</span>\n    </div>\n  );\n};\n\nexport default Screen;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Navbar = () => {\n  const links = [\n    {\n      id: 1,\n      path: '/',\n      text: 'Math Magicians',\n    },\n    {\n      id: 2,\n      path: '/',\n      text: 'Home',\n    },\n    {\n      id: 3,\n      path: '/calculator',\n      text: 'Calculator',\n    },\n    {\n      id: 4,\n      path: '/quotes',\n      text: 'Quotes',\n    },\n  ];\n\n  return (\n    <nav className=\"navBar\">\n      <ul className=\"nav-list\">\n        {links.map(link => (\n          <li key={link.id} className=\"nav-links\">\n            <NavLink to={link.path} activeClassName=\"active-link\" exact>\n              {link.text}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\n\nconst Home = () => (\n  <div className=\"description\">\n    <h2>Welcome to the Math Magicians App</h2>\n    <p>\n      Calculator provides simple and advanced mathematical functions in a beautifully designed app.\n      Perform basic calculations such as addition, subtraction, multiplication, and division\n      Do scientific operations such as trigonometric, logarithmic, and exponential functions\n    </p>\n  </div>\n);\nexport default Home;\n","import React from 'react';\n\nconst Quotes = () => (\n  <div className=\"description\">\n    <h2>Math Magicians</h2>\n    <p>\n      Mathematics includes the study of such topics as quantity, structure, space,\n      and change. It has no generally accepted definition.\n      Mathematicians seek and use patterns to formulate new conjectures;\n      they resolve the truth or falsity of such by mathematical proof.\n    </p>\n  </div>\n);\nexport default Quotes;\n","import React from 'react';\n\nconst Sidecalculator = () => (\n  <div className=\"description\">\n    <h2>WHAT IS NEW</h2>\n    <p>\n      Calculator now displays decimal results and symbolic results for\n      fractions or certain advanced functions.\n      For example, 10 รท 12 will display both 0.83333....\n    </p>\n  </div>\n);\nexport default Sidecalculator;\n","import React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport calculate from '../logic/calculate';\nimport Buttons from './Buttons';\nimport Screen from './Screen';\nimport getCurrOperation from '../logic/getCurrOperation';\nimport Navbar from './Navbar';\nimport Home from './pages/Home';\nimport Quotes from './pages/Quotes';\nimport Sidecalculator from './Sidecalculator';\n\nconst Calculator = () => {\n  const [state, setItem] = useState(\n    (state, newState) => ({ ...state, ...newState }),\n    {},\n  );\n\n  const handleClick = event => {\n    setItem(calculate(state, event.target.value));\n  };\n\n  const {\n    next, total, operation, equalSign,\n  } = state;\n  const curr = next || total || '0';\n  const currOperation = getCurrOperation([total, operation, next, equalSign]);\n  return (\n    <>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/quotes\">\n          <Quotes />\n        </Route>\n        <Route path=\"/calculator\">\n          <div className=\"calculator-wrapper\">\n            <Sidecalculator />\n            <div className=\"Calculator\">\n              <Screen value={[currOperation]} />\n              <Screen value={curr} />\n              <Buttons handleClick={handleClick} />\n            </div>\n          </div>\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nexport default Calculator;\n","import { useEffect, useRef } from 'react';\n\n// if EQUIAL sign, getCurrOperation return the prev state, else return the curr state\nexport default function getCurrOperation(value) {\n  const ref = useRef();\n\n  // keep track of the prev state\n  useEffect(() => {\n    // This line is asigned after some update\n    ref.current = value.filter(v => v) || [];\n  });\n\n  // verify that the equalSing is ether true of false\n  const equalSing = value.indexOf(true) !== -1;\n\n  // when equalSing is set to true then return prev state\n  const currValues = equalSing ? ref.current : value;\n\n  // remove undefined, true & add space in between values\n  const operation = currValues.filter(v => v).map(v => v !== true && v.padStart(2, ' '));\n\n  // if equalSing is true then return its value\n  const result = equalSing ? ` = ${value[0]}` : '';\n\n  return [operation, result];\n}\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n      equalSign: false,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return {\n          next: obj.next + buttonName,\n          total: obj.total,\n          operation: obj.operation,\n        };\n      }\n      return { next: buttonName, total: obj.total, operation: obj.operation };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName,\n        total: obj.total,\n        operation: obj.operation,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.includes('.')) {\n        return {};\n      }\n      return { next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.total.includes('.')) {\n        return {};\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n        equalSign: true,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  if (!obj.next && !obj.total) {\n    return {};\n  }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","import React from 'react';\nimport Calculator from './components/Calculator';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Calculator />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './calculator.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}